const ApiResponse = require("../utils/apiResponse");

class AppError extends Error {
  constructor(message, statusCode) {
    super(message);
    this.statusCode = statusCode;
    this.status = `${statusCode}`.startsWith("4") ? "fail" : "error";
    this.isOperational = true;

    Error.captureStackTrace(this, this.constructor);
  }
}

const errorHandler = (err, req, res, next) => {
  err.statusCode = err.statusCode || 500;

  // Lá»—i validation tá»« Joi
  if (err.name === "ValidationError") {
    return res.status(400).json(ApiResponse.error(err.message, 400));
  }

  // Lá»—i unique constraint tá»« MySQL
  if (err.code === "ER_DUP_ENTRY") {
    return res
      .status(400)
      .json(ApiResponse.error("Dá»¯ liá»‡u Ä‘Ã£ tá»“n táº¡i trong há»‡ thá»‘ng", 400));
  }

  // Lá»—i foreign key constraint
  if (err.code === "ER_NO_REFERENCED_ROW") {
    return res
      .status(400)
      .json(ApiResponse.error("Dá»¯ liá»‡u tham chiáº¿u khÃ´ng tá»“n táº¡i", 400));
  }

  // Lá»—i tá»« multer
  if (err.name === "MulterError") {
    if (err.code === "LIMIT_FILE_SIZE") {
      return res
        .status(400)
        .json(ApiResponse.error("File upload quÃ¡ lá»›n", 400));
    }
    return res
      .status(400)
      .json(ApiResponse.error(`Lá»—i upload file: ${err.message}`, 400));
  }

  // Lá»—i tá»« cloudinary
  if (err.http_code) {
    return res
      .status(err.http_code)
      .json(ApiResponse.error(`Lá»—i xá»­ lÃ½ áº£nh: ${err.message}`, err.http_code));
  }

  // Lá»—i tá»« JWT
  if (err.name === "JsonWebTokenError") {
    return res.status(401).json(ApiResponse.error("Token khÃ´ng há»£p lá»‡", 401));
  }

  if (err.name === "TokenExpiredError") {
    return res.status(401).json(ApiResponse.error("Token Ä‘Ã£ háº¿t háº¡n", 401));
  }

  // Lá»—i operational (do chÃºng ta táº¡o)
  if (err.isOperational) {
    return res
      .status(err.statusCode)
      .json(ApiResponse.error(err.message, err.statusCode));
  }

  // Lá»—i láº­p trÃ¬nh hoáº·c lá»—i khÃ´ng xÃ¡c Ä‘á»‹nh khÃ¡c
  console.error("ERROR ðŸ’¥", err);
  res
    .status(500)
    .json(ApiResponse.error("CÃ³ lá»—i xáº£y ra, vui lÃ²ng thá»­ láº¡i sau", 500));
};

module.exports = {
  AppError,
  errorHandler,
};
